Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
                              ./queue.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                              ./can.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
                              ./can.o (__ashldi3)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
                              ./led.o (__lshrdi3)
/usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
                              ./queue.o (calloc)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o) (malloc)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
                              ./queue.o (memcpy)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o) (memset)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__flp               0x2               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
 .text          0x0000000000000000        0x0 ./ESP8266.o
 .bss           0x0000000000000000        0x0 ./ESP8266.o
 .text._Z11esp_powerupv
                0x0000000000000000        0xc ./ESP8266.o
 .text._Z11esp_at_modev
                0x0000000000000000        0x4 ./ESP8266.o
 .text._Z14esp_flash_modev
                0x0000000000000000        0x4 ./ESP8266.o
 .text._Z8esp_initi
                0x0000000000000000       0x2a ./ESP8266.o
 .text          0x0000000000000000        0x0 ./can.o
 .bss           0x0000000000000000        0x0 ./can.o
 .text._Z10can_tx_msgP9CAN_frame
                0x0000000000000000       0x66 ./can.o
 .text          0x0000000000000000        0x0 ./led.o
 .bss           0x0000000000000000        0x0 ./led.o
 .text          0x0000000000000000        0x0 ./main.o
 .bss           0x0000000000000000        0x0 ./main.o
 .text          0x0000000000000000        0x0 ./queue.o
 .bss           0x0000000000000000        0x0 ./queue.o
 .text._Z14QueueSpaceLeftP13QueueHandle_t
                0x0000000000000000        0xa ./queue.o
 .text._Z9QueuePeekP13QueueHandle_tPv
                0x0000000000000000       0x34 ./queue.o
 .text          0x0000000000000000        0x0 ./scheduler.o
 .bss           0x0000000000000000        0x0 ./scheduler.o
 .text          0x0000000000000000        0x0 ./systick.o
 .bss           0x0000000000000000        0x0 ./systick.o
 .text          0x0000000000000000        0x0 ./task.o
 .bss           0x0000000000000000        0x0 ./task.o
 .text._Z12counter_taskhhhh
                0x0000000000000000        0x2 ./task.o
 .text          0x0000000000000000        0x0 ./uart.o
 .bss           0x0000000000000000        0x0 ./uart.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
LOAD ./ESP8266.o
LOAD ./can.o
LOAD ./led.o
LOAD ./main.o
LOAD ./queue.o
LOAD ./scheduler.o
LOAD ./systick.o
LOAD ./task.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xcb2
 *(.vectors)
 .vectors       0x0000000000000000       0x94 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000094                . = ALIGN (0x2)
                0x0000000000000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000094        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000094                __ctors_start = .
 *(.ctors)
                0x0000000000000094                __ctors_end = .
                0x0000000000000094                __dtors_start = .
 *(.dtors)
                0x0000000000000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000094        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
                0x0000000000000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000094        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000a0       0x1a /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                0x00000000000000a0                __do_copy_data
 .init4         0x00000000000000ba       0x10 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ca        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ce        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
                0x00000000000000ce                __vector_22
                0x00000000000000ce                __vector_28
                0x00000000000000ce                __vector_1
                0x00000000000000ce                __vector_32
                0x00000000000000ce                __vector_34
                0x00000000000000ce                __vector_24
                0x00000000000000ce                __vector_12
                0x00000000000000ce                __bad_interrupt
                0x00000000000000ce                __vector_6
                0x00000000000000ce                __vector_31
                0x00000000000000ce                __vector_35
                0x00000000000000ce                __vector_3
                0x00000000000000ce                __vector_23
                0x00000000000000ce                __vector_30
                0x00000000000000ce                __vector_25
                0x00000000000000ce                __vector_11
                0x00000000000000ce                __vector_13
                0x00000000000000ce                __vector_17
                0x00000000000000ce                __vector_19
                0x00000000000000ce                __vector_7
                0x00000000000000ce                __vector_27
                0x00000000000000ce                __vector_5
                0x00000000000000ce                __vector_33
                0x00000000000000ce                __vector_4
                0x00000000000000ce                __vector_9
                0x00000000000000ce                __vector_2
                0x00000000000000ce                __vector_21
                0x00000000000000ce                __vector_15
                0x00000000000000ce                __vector_36
                0x00000000000000ce                __vector_29
                0x00000000000000ce                __vector_8
                0x00000000000000ce                __vector_26
                0x00000000000000ce                __vector_14
                0x00000000000000ce                __vector_10
                0x00000000000000ce                __vector_20
                0x00000000000000d0                . = ALIGN (0x2)
 *(.text.*)
 .text._Z11can_rx_taskh
                0x00000000000000d0      0x168 ./can.o
                0x00000000000000d0                _Z11can_rx_taskh
 .text.__vector_18
                0x0000000000000238       0x96 ./can.o
                0x0000000000000238                __vector_18
 .text._Z8can_initv
                0x00000000000002ce       0xe4 ./can.o
                0x00000000000002ce                _Z8can_initv
 .text._Z8led_initv
                0x00000000000003b2        0xe ./led.o
                0x00000000000003b2                _Z8led_initv
 .text._Z13is_alive_taskh
                0x00000000000003c0       0xc8 ./led.o
                0x00000000000003c0                _Z13is_alive_taskh
 .text.startup.main
                0x0000000000000488      0x17a ./main.o
                0x0000000000000488                main
 .text._Z11QueueCreatehh
                0x0000000000000602       0x54 ./queue.o
                0x0000000000000602                _Z11QueueCreatehh
 .text._Z9QueueSendP13QueueHandle_tPKv
                0x0000000000000656       0x54 ./queue.o
                0x0000000000000656                _Z9QueueSendP13QueueHandle_tPKv
 .text._Z12QueueReceiveP13QueueHandle_tPv
                0x00000000000006aa       0x52 ./queue.o
                0x00000000000006aa                _Z12QueueReceiveP13QueueHandle_tPv
 .text._Z14scheduler_initv
                0x00000000000006fc       0x50 ./scheduler.o
                0x00000000000006fc                _Z14scheduler_initv
 .text._Z11create_taskhPFvhE
                0x000000000000074c       0x30 ./scheduler.o
                0x000000000000074c                _Z11create_taskhPFvhE
 .text._Z9set_stateh
                0x000000000000077c       0x14 ./scheduler.o
                0x000000000000077c                _Z9set_stateh
 .text._Z4waitj
                0x0000000000000790       0x1a ./scheduler.o
                0x0000000000000790                _Z4waitj
 .text._Z8schedulev
                0x00000000000007aa       0x90 ./scheduler.o
                0x00000000000007aa                _Z8schedulev
 .text._Z12init_systickv
                0x000000000000083a       0x10 ./systick.o
                0x000000000000083a                _Z12init_systickv
 .text.__vector_16
                0x000000000000084a       0x22 ./systick.o
                0x000000000000084a                __vector_16
 .text._Z13uart0_rx_taskh
                0x000000000000086c       0x2c ./uart.o
                0x000000000000086c                _Z13uart0_rx_taskh
 .text._Z13uart0_tx_taskh
                0x0000000000000898       0x28 ./uart.o
                0x0000000000000898                _Z13uart0_tx_taskh
 .text._Z13uart1_rx_taskh
                0x00000000000008c0       0x2c ./uart.o
                0x00000000000008c0                _Z13uart1_rx_taskh
 .text._Z13uart1_tx_taskh
                0x00000000000008ec       0x28 ./uart.o
                0x00000000000008ec                _Z13uart1_tx_taskh
 .text._Z9uart_initi
                0x0000000000000914       0x3c ./uart.o
                0x0000000000000914                _Z9uart_initi
 .text.libgcc.div
                0x0000000000000950       0x26 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000000950                __divmodhi4
                0x0000000000000950                _div
 .text.libgcc.builtins
                0x0000000000000976       0x32 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
                0x0000000000000976                __ashldi3
 .text.libgcc.builtins
                0x00000000000009a8       0x3c /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
                0x00000000000009a8                __ashrdi3
                0x00000000000009ac                __lshrdi3
 .text.libgcc.div
                0x00000000000009e4       0x28 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000009e4                __udivmodhi4
 .text.avr-libc
                0x0000000000000a0c       0x34 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
                0x0000000000000a0c                calloc
 .text.avr-libc
                0x0000000000000a40      0x24e /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                0x0000000000000a40                malloc
                0x0000000000000b70                free
 .text.avr-libc
                0x0000000000000c8e       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
                0x0000000000000c8e                memcpy
 .text.avr-libc
                0x0000000000000ca0        0xe /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)
                0x0000000000000ca0                memset
                0x0000000000000cae                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000cae        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                0x0000000000000cae                exit
                0x0000000000000cae                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000cae        0x4 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000cb2                _etext = .

.data           0x0000000000800100       0x12 load address 0x0000000000000cb2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
 .data          0x0000000000800100        0x0 ./ESP8266.o
 .data          0x0000000000800100        0x0 ./can.o
 .data          0x0000000000800100        0x0 ./led.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 ./queue.o
 .data          0x0000000000800100        0x0 ./scheduler.o
 .data          0x0000000000800100        0x0 ./systick.o
 .data          0x0000000000800100        0x0 ./task.o
 .data          0x0000000000800100        0x0 ./uart.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
 .data          0x0000000000800100        0x6 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                0x0000000000800100                __malloc_heap_end
                0x0000000000800102                __malloc_heap_start
                0x0000000000800104                __malloc_margin
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800106        0xb ./main.o
 *(.gnu.linkonce.d*)
                0x0000000000800112                . = ALIGN (0x2)
 *fill*         0x0000000000800111        0x1 
                0x0000000000800112                _edata = .
                0x0000000000800112                PROVIDE (__data_end, .)

.bss            0x0000000000800112       0x78
                0x0000000000800112                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.canpage_bkp
                0x0000000000800112        0x1 ./can.o
                0x0000000000800112                canpage_bkp
 .bss.data      0x0000000000800113        0x1 ./can.o
                0x0000000000800113                data
 .bss.Queue_CAN_Rx
                0x0000000000800114        0x8 ./main.o
                0x0000000000800114                Queue_CAN_Rx
 .bss.Queue_Uart1_Tx
                0x000000000080011c        0x8 ./main.o
                0x000000000080011c                Queue_Uart1_Tx
 .bss.Queue_Uart1_Rx
                0x0000000000800124        0x8 ./main.o
                0x0000000000800124                Queue_Uart1_Rx
 .bss.Queue_Uart0_Tx
                0x000000000080012c        0x8 ./main.o
                0x000000000080012c                Queue_Uart0_Tx
 .bss.Queue_Uart0_Rx
                0x0000000000800134        0x8 ./main.o
                0x0000000000800134                Queue_Uart0_Rx
 .bss._ZZ11QueueCreatehhE8id_count
                0x000000000080013c        0x1 ./queue.o
 .bss.current_task
                0x000000000080013d        0x1 ./scheduler.o
                0x000000000080013d                current_task
 .bss.task_counter
                0x000000000080013e        0x1 ./scheduler.o
                0x000000000080013e                task_counter
 .bss.tasks     0x000000000080013f       0x46 ./scheduler.o
                0x000000000080013f                tasks
 .bss.ticks     0x0000000000800185        0x1 ./systick.o
                0x0000000000800185                ticks
 *(COMMON)
 COMMON         0x0000000000800186        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                0x0000000000800186                __brkval
                0x0000000000800188                __flp
                0x000000000080018a                PROVIDE (__bss_end, .)
                0x0000000000000cb2                __data_load_start = LOADADDR (.data)
                0x0000000000000cc4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080018a        0x0
                0x000000000080018a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080018a                PROVIDE (__noinit_end, .)
                0x000000000080018a                _end = .
                0x000000000080018a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x13b0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
 .stab          0x00000000000006cc      0x36c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
                                        0x378 (size before relaxing)
 .stab          0x0000000000000a38      0x888 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                                        0x8e8 (size before relaxing)
 .stab          0x00000000000012c0       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
                                         0x90 (size before relaxing)
 .stab          0x0000000000001344       0x6c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)
                                         0x78 (size before relaxing)

.stabstr        0x0000000000000000      0xe1b
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe1b /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./ESP8266.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./can.o
 .comment       0x0000000000000000       0x12 ./led.o
 .comment       0x0000000000000000       0x12 ./main.o
 .comment       0x0000000000000000       0x12 ./queue.o
 .comment       0x0000000000000000       0x12 ./scheduler.o
 .comment       0x0000000000000000       0x12 ./systick.o
 .comment       0x0000000000000000       0x12 ./task.o
 .comment       0x0000000000000000       0x12 ./uart.o
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
 .comment       0x0000000000000000       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(ATMEGA90CAN128_CUSTOM_RTCS.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
QueueCreate(unsigned char, unsigned char)         ./queue.o
                                                  ./main.o
QueuePeek(QueueHandle_t*, void*)                  ./queue.o
QueueReceive(QueueHandle_t*, void*)               ./queue.o
                                                  ./uart.o
                                                  ./led.o
QueueSend(QueueHandle_t*, void const*)            ./queue.o
                                                  ./uart.o
                                                  ./main.o
                                                  ./led.o
                                                  ./can.o
QueueSpaceLeft(QueueHandle_t*)                    ./queue.o
Queue_CAN_Rx                                      ./main.o
                                                  ./led.o
                                                  ./can.o
Queue_Uart0_Rx                                    ./main.o
                                                  ./uart.o
Queue_Uart0_Tx                                    ./main.o
                                                  ./uart.o
                                                  ./led.o
Queue_Uart1_Rx                                    ./main.o
                                                  ./uart.o
Queue_Uart1_Tx                                    ./main.o
                                                  ./uart.o
__ashldi3                                         /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashldi3.o)
                                                  ./can.o
__ashrdi3                                         /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__brkval                                          /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
                                                  ./queue.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_clear_bss.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                                                  ./systick.o
                                                  ./scheduler.o
                                                  ./queue.o
                                                  ./main.o
                                                  ./can.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_copy_data.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                                                  ./main.o
__flp                                             /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__heap_start                                      /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__lshrdi3                                         /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_ashrdi3.o)
                                                  ./led.o
__malloc_heap_end                                 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__malloc_heap_start                               /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__malloc_margin                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_16                                       ./systick.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_18                                       ./can.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_26                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_27                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_28                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_29                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_30                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_31                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_32                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_33                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_34                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_35                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_36                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
_div                                              /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
calloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
                                                  ./queue.o
can_init()                                        ./can.o
                                                  ./main.o
can_rx_task(unsigned char)                        ./can.o
                                                  ./main.o
can_tx_msg(CAN_frame*)                            ./can.o
canpage_bkp                                       ./can.o
counter_task(unsigned char, unsigned char, unsigned char, unsigned char) ./task.o
create_task(unsigned char, void (*)(unsigned char)) ./scheduler.o
                                                  ./main.o
current_task                                      ./scheduler.o
data                                              ./can.o
esp_at_mode()                                     ./ESP8266.o
esp_flash_mode()                                  ./ESP8266.o
esp_init(int)                                     ./ESP8266.o
esp_powerup()                                     ./ESP8266.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
free                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
init_systick()                                    ./systick.o
                                                  ./scheduler.o
is_alive_task(unsigned char)                      ./led.o
                                                  ./main.o
led_init()                                        ./led.o
                                                  ./main.o
main                                              ./main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/crtcan128.o
malloc                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(malloc.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
memcpy                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memcpy.o)
                                                  ./queue.o
memset                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(memset.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr51/libc.a(calloc.o)
schedule()                                        ./scheduler.o
                                                  ./main.o
scheduler_init()                                  ./scheduler.o
                                                  ./main.o
set_state(unsigned char)                          ./scheduler.o
                                                  ./led.o
task_counter                                      ./scheduler.o
tasks                                             ./scheduler.o
ticks                                             ./systick.o
                                                  ./scheduler.o
uart0_rx_task(unsigned char)                      ./uart.o
                                                  ./main.o
uart0_tx_task(unsigned char)                      ./uart.o
                                                  ./main.o
uart1_rx_task(unsigned char)                      ./uart.o
                                                  ./main.o
uart1_tx_task(unsigned char)                      ./uart.o
                                                  ./main.o
uart_init(int)                                    ./uart.o
                                                  ./main.o
wait(unsigned int)                                ./scheduler.o
                                                  ./led.o
